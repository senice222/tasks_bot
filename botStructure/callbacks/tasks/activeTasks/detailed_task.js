const { Markup } = require('telegraf')
const Task = require('../../../../serverProcessors/models/TaskModel')

module.exports = (bot) => {
	
	bot.action(/\?lookTaskInside_(.+)/, async ctx => {
		const task = await Task.findById(ctx.match[1])

		if (!task) {
			return ctx.editMessageText('–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫..')
		}

		return ctx.editMessageText(
			`<b>–ó–∞–≥–æ–ª–æ–≤–æ–∫:</b> ${task.title}\n<b>–û–ø–∏—Å–∞–Ω–∏–µ:</b> ${task.descr}`,
			{
				reply_markup: Markup.inlineKeyboard([
					[
						Markup.button.callback(
							'‚úÖ –ü–æ–º–µ—Ç–∏—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã–º',
							`?task_is_done_${task._id}`
						),
					],
					[
						Markup.button.callback(
							'‚ùå –£–¥–∞–ª–∏—Ç—å –∑–∞–¥–∞—á—É',
							`?delete_task_${task._id}`
						),
					],
					[
						Markup.button.callback('üîô –ù–∞–∑–∞–¥', '?list_of_tasks')
					],
				]).resize().reply_markup,
				parse_mode: 'HTML',
			}
		)
	})
	bot.action(/\?task_is_done_(.+)/, async (ctx) => {
		const id = ctx.match[1]
		const task = await Task.findByIdAndUpdate(id, {
			status: "done"
		})
		await task.save()

		return ctx.editMessageText(
			"–í—ã —É—Å–ø–µ—à–Ω–æ –≤—ã–ø–æ–ª–Ω–∏–ª–∏ —ç—Ç—É –∑–∞–¥–∞—á—É ‚úÖ",
			{
				reply_markup: Markup.inlineKeyboard([
					[
						Markup.button.callback('üîô –ù–∞–∑–∞–¥', '?list_of_tasks')
					]
				]).resize().reply_markup
			}
		)
	})

	bot.action(/\?delete_task_(.+)/, async (ctx) => {
		const id = ctx.match[1]
		await Task.deleteOne({_id: id})

		return ctx.editMessageText(
			"–í—ã —É–¥–∞–ª–∏–ª–∏ —ç—Ç—É –∑–∞–¥–∞—á—É –∏–∑ —Å–ø–∏—Å–∫–∞ ‚úÖ",
			{
				reply_markup: Markup.inlineKeyboard([
					[
						Markup.button.callback('üîô –ù–∞–∑–∞–¥', '?list_of_tasks')
					]
				]).resize().reply_markup
			}
		)
	})
}
